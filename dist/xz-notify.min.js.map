{
  "version": 3,
  "sources": ["xz-notify.js"],
  "sourcesContent": ["/**\n * XZNotify is a framework-agnostic web component to show floating\n * notifications. The component uses a first-in, first-out queue.data structure,\n * new notifications are automatically appended to the end of the queue.\n * Also, each appended component automatically computes its own position.\n * More details on https://www.github.com/dknight/xz-notify\n *\n * @author Dmitri Smirnov <https://www.whoop.ee/>\n * @license MIT 2023\n * @version 1.0.1\n * @extends HTMLElement\n *\n * @property {string} [type=\"info\"] Type of the notification. There are built-in\n * types: default, info, success, warning and error.\n * @property {number} [expire=10000] Time in milliseconds. How long the\n * notification will be displayed. If expire is zero or less, the notification\n * will be closed immediately. If the expiration value cannot be parsed into a\n * number then the default fallback is used.\n * @property {boolean} [closeable=false] If it is set, clicking on the\n * notification will close it.\n * @property {Positions} [position=\"ne\"] Position of the notification on the\n * screen. Position corresponds to a point of compass: n (north),\n * ne (north-east), s (south), etc.\n * @property {string} [heading] The heading of the notification. Creates h3\n * element inside the notification.\n * @property {boolean} [grouped=false] If grouped is set, then the offset\n * position is not recalculated and notifications are stacked.\n *\n * @fires XZNotify#open\n * @fires XZNotify#close\n *\n * @example\n * <!-- Declarative way -->\n * <xz-notify expire=\"8000\" closeable>Hello world!</xz-notify>\n * @example\n * // Programmatic way\n * document.body.append(XZNotify.create('Hello world!', {\n *   expire: 8000,\n *   closeable: true,\n * }));\n */\nclass XZNotify extends HTMLElement {\n  /**\n   * XZNotify HTML tag name.\n   * @type {string}\n   */\n  static TAG_NAME = 'xz-notify';\n\n  /**\n   * Observed attributes if required. Usually, a notification's life is very\n   * short, and there is no point in observing attributes.\n   * @type {string[]}\n   */\n  static observedAttributes = [];\n\n  /**\n   * Notification's possible types.\n   * @type {Types}\n   */\n  static types = {\n    INFO:    'info',\n    WARNING: 'warning',\n    SUCCESS: 'success',\n    ERROR:   'error',\n  };\n\n  /**\n   * Events for the component.\n   * @type {Events}\n   */\n  static events = {\n    OPEN:  new CustomEvent('xz-notify:open', {bubbles: true}),\n    CLOSE: new CustomEvent('xz-notify:close', {bubbles: true}),\n  };\n\n  /**\n   * Positioning constants.\n   * @type {Positions}\n   */\n  static position = {\n    N:  'n',\n    NE: 'ne',\n    E:  'e',\n    SE: 'se',\n    S:  's',\n    SW: 'sw',\n    W:  'w',\n    NW: 'nw',\n  };\n\n  /**\n   * Contains currently opened notifications.\n   * @type {Object<Position, XZNotify[]>}\n   */\n  static collection = {\n    [this.position.N]:  [],\n    [this.position.NE]: [],\n    [this.position.E]:  [],\n    [this.position.SE]: [],\n    [this.position.S]:  [],\n    [this.position.SW]: [],\n    [this.position.W]:  [],\n    [this.position.NW]: [],\n  };\n\n  /**\n   * @type {Defaults}\n   */\n  static defaults = {\n    EXPIRE:    10000,\n    TYPE:      this.types.INFO,\n    POSITION:  this.position.NE,\n    CLOSEABLE: false,\n    GROUPED:   false,\n  };\n\n  /**\n   * Creates a new XZNotify element. Recommended to use when creating\n   * notifications.\n   * @param {string} content - Content of the notification.\n   * @param {Object<string, string>} [attrs={}] - Attributes of the\n   * `<xz-notify>` element.\n   * @param {boolean} [trusted=false] - If `true` then HTML is allowed in\n   * content. Might not be safe for XSS.\n   * @return {XZNotify}\n   */\n  static create = (content, attrs = {}, trusted = false) => {\n    const elem = document.createElement(this.TAG_NAME);\n    Object.entries(attrs).forEach(([k, v]) => {\n      if (v === false || v === null) {\n        return;\n      }\n      elem.setAttribute(k, v);\n    });\n    elem[trusted ? 'innerHTML' : 'textContent'] = content;\n    return elem;\n  };\n\n  // Private vars here please...\n  #styleElem = document.createElement('style');\n  #forcedClose = false;\n\n  /**\n   * Constructor is always called before an instance of notification is\n   * connected to the DOM.\n   */\n  constructor() {\n    super();\n    this.root = this.attachShadow({mode: 'open'});\n    this.#styleElem.textContent = ':host{--xz-notify-background-color: #f7f7f7;--xz-notify-heading-color: currentColor;--xz-notify-zIndex: auto;display:block;position:fixed;left:var(--xz-notify-left);top:var(--xz-notify-top);border-radius:0;border:0 solid;font-family:system-ui,-apple-system,Arial,sans-serif;font-size:16px;font-weight:400;line-height:normal;margin:.5em;padding:1.5em;width:fit-content;max-width:28em;min-width:18em;height:auto;z-index:var(--xz-notify-zIndex);animation:xz-notify-toggle .25s ease-in;background:var(--xz-notify-background-color) linear-gradient(to right,var(--xz-notify-heading-color) .25em,transparent 0);border-color:transparent;color:#666}:host([data-closing]){animation-direction:reverse;animation-iteration-count:2}@keyframes xz-notify-toggle{0%{opacity:0}to{opacity:1}}:host([closeable]){cursor:pointer}:host([closeable]:hover):after{content:\"\";display:block;width:100%;height:100%;background:rgba(0,0,0,.05);position:absolute;top:0;left:0;pointer-events:none}:host p{margin-top:0}:host a{color:currentColor}:host h3{color:var(--xz-notify-heading-color, currentColor);font-size:125%;margin:0 0 .5em}:host([type=\"info\"]){--xz-notify-heading-color: #4d4dff;--xz-notify-background-color: #f6f6ff}:host([type=\"success\"]){--xz-notify-heading-color: #2ec946;--xz-notify-background-color: #f4fcf6}:host([type=\"warning\"]){--xz-notify-heading-color: #ffba00;--xz-notify-background-color: #fffbf2}:host([type=\"error\"]){--xz-notify-heading-color: #ff3838;--xz-notify-background-color: #fff5f5}';\n  }\n\n  /**\n   * Calculates and sets the position of the notification.\n   */\n  #setPosition() {\n    const i = this.grouped ? 0 : this.#findIndex();\n    const [x, y] = this.#calcBasePosition();\n    const [dx, dy] = this.#calcOffsetPosition(i);\n    this.style.setProperty('--xz-notify-left', `calc(${x} - ${dx}px)`);\n    this.style.setProperty('--xz-notify-top', `calc(${y} + ${dy}px)`);\n    if (this.grouped) {\n      const c = this.constructor.collection[this.position].length;\n      this.style.setProperty('--xz-notify-zIndex', 1e4 - c);\n    }\n  }\n\n  /**\n   * Gets the index of the current notification in collection.\n   * @return {number}\n   */\n  #findIndex() {\n    return this.constructor.collection[this.position]\n        .findIndex((x) => x === this);\n  }\n\n  /**\n   * Calculates base position.\n   * @return {number[]}\n   */\n  #calcBasePosition() {\n    switch (this.position) {\n      case XZNotify.position.N:\n        return ['50%', '0%'];\n      case XZNotify.position.NE:\n        return ['100%', '0%'];\n      case XZNotify.position.E:\n        return ['100%', '50%'];\n      case XZNotify.position.SE:\n        return ['100%', '100%'];\n      case XZNotify.position.S:\n        return ['50%', '100%'];\n      case XZNotify.position.SW:\n        return ['0%', '100%'];\n      case XZNotify.position.W:\n        return ['0%', '50%'];\n      case XZNotify.position.NW:\n        return ['0%', '0%'];\n    };\n  }\n\n  /**\n   * Calculates offset position.\n   * @param {number} i\n   * @return {number[]}\n   */\n  #calcOffsetPosition(i) {\n    const rect = this.getBoundingClientRect();\n    const styles = getComputedStyle(this);\n    const mt = Number.parseInt(styles.getPropertyValue('margin-top'));\n    const mr = Number.parseInt(styles.getPropertyValue('margin-right'));\n    const mb = Number.parseInt(styles.getPropertyValue('margin-bottom'));\n    const ml = Number.parseInt(styles.getPropertyValue('margin-left'));\n    switch (this.position) {\n      case XZNotify.position.N:\n        return [rect.width/2, i*(rect.height + mt)];\n      case XZNotify.position.NE:\n        return [rect.width + ml + mr, i*(rect.height + mt)];\n      case XZNotify.position.E:\n        return [(i+1)*(rect.width + ml + mr), -(rect.height/2 + mt + mb)];\n      case XZNotify.position.SE:\n        return [rect.width + ml + mr, -(i+1)*(rect.height + mt + mb)];\n      case XZNotify.position.S:\n        return [rect.width/2, -(i+1)*(rect.height + mt + mb)];\n      case XZNotify.position.SW:\n        return [0, -(i+1)*(rect.height + mt + mb)];\n      case XZNotify.position.W:\n        return [i*-(rect.width + ml), -(rect.height/2 + mt + mb)];\n      case XZNotify.position.NW:\n        return [0, i*(rect.height + mt)];\n    };\n  }\n\n  /**\n   * Re-position all elements.\n   */\n  #setPositionAll() {\n    Object.values(this.constructor.collection).forEach((coll) => {\n      coll.forEach((x) => this.#setPosition.call(x));\n    });\n  }\n\n  /**\n   * @inheritdoc\n   */\n  connectedCallback() {\n    this.#reflectToProperties();\n    this.constructor.collection[this.position].push(this);\n    this.dispatchEvent(this.constructor.events.OPEN, this);\n    this.#render();\n    this.#hydrate();\n  }\n\n  /**\n   * Reflect attributes to properties for convenience.\n   * Use default if no attribute set.\n   */\n  #reflectToProperties() {\n    this.type = (this.getAttribute('type')\n        || this.constructor.defaults.TYPE).toLowerCase();\n    this.position = (this.getAttribute('position')\n        || this.constructor.position.NE).toLowerCase();\n    this.expire = this.getAttribute('expire');\n    if (this.expire === null) {\n      this.expire = this.constructor.defaults.EXPIRE;\n    } else if (this.expire === '0') {\n      this.expire = 0;\n    } else {\n      this.expire = Number(this.expire);\n      if (Number.isNaN(this.expire)) {\n        this.expire = this.constructor.defaults.EXPIRE;\n      }\n    }\n    this.closeable = this.hasAttribute('closeable');\n    this.heading = this.getAttribute('heading');\n    this.grouped = this.hasAttribute('grouped');\n  }\n\n  /**\n   * Renders element.\n   */\n  #render() {\n    this.root.append(this.#styleElem);\n    this.heading && this.root.appendChild(this.#buildHeading());\n    this.root.append(...this.childNodes);\n  }\n\n  /**\n   * Builds heading <h3> element.\n   * @return {HTMLHeadingElement}\n   */\n  #buildHeading() {\n    const h = document.createElement('h3');\n    h.innerText = this.heading;\n    return h;\n  }\n\n  /**\n   * Added all interactivity here for potential SSR. But it can actually be\n   * done in render() or connectedCallback().\n   */\n  #hydrate() {\n    const hasAnimation = Number.parseFloat(\n        window.getComputedStyle(this).getPropertyValue('animation-duration'),\n    ) > 0;\n    this.#setPosition();\n    let start;\n    const tick = (ts) => {\n      if (start === undefined) {\n        start = ts;\n      }\n      if (ts - start >= this.expire || this.#forcedClose) {\n        this.dataset.closing = true;\n        if (hasAnimation) {\n          this.style.animationPlayState = 'running';\n        } else {\n          this.#close();\n        }\n        return;\n      }\n      requestAnimationFrame(tick);\n    };\n    requestAnimationFrame(tick);\n    this.addEventListener('animationend', this.#close);\n    if (this.closeable) {\n      this.addEventListener('click', this.closeHandler.bind(this));\n    }\n  }\n\n  /**\n   * Closes the notification.\n   */\n  #close() {\n    if (!this.dataset.closing) {\n      this.style.animationPlayState = 'paused';\n      return;\n    }\n    this.dispatchEvent(this.constructor.events.CLOSE, this);\n    this.remove();\n  }\n\n  /**\n   * Handler when closeable is true and clicked on the notification.\n   * @param {MouseEvent|PointerEvent} e\n   */\n  closeHandler(e) {\n    this.#forcedClose = true;\n  }\n\n  /**\n   * @inheritdoc\n   */\n  disconnectedCallback() {\n    this.constructor.collection[this.position]\n        = this.constructor.collection[this.position].filter((x) => x !== this);\n    this.#setPositionAll();\n  }\n}\n\nwindow.customElements.define(XZNotify.TAG_NAME, XZNotify);\n\nexport default XZNotify;\n\n/**\n * @typedef Positions\n * @property {Position} [N=\"n\"]\n * @property {Position} [NE=\"ne\"]\n * @property {Position} [E=\"e\"]\n * @property {Position} [SE=\"se\"]\n * @property {Position} [S=\"s\"]\n * @property {Position} [SW=\"sw\"]\n * @property {Position} [W=\"w\"]\n * @property {Position} [NW=\"nw\"]\n */\n\n/**\n * @typedef Position\n * @property {(\"n\"|\"ne\"|\"e\"|\"se\"|\"s\"|\"sw\"|\"w\"|\"nw\")}\n */\n\n/**\n * @typedef Types\n * @property {string} [DEFAULT=\"default\"]\n * @property {string} [INFO=\"info\"]\n * @property {string} [WARNING=\"string\"]\n * @property {string} [SUCCESS=\"string\"]\n * @property {string} [ERROR=\"string\"]\n */\n\n/**\n * @typedef Events\n * @property {CustomEvent} OPEN\n * @property {CustomEvent} CLOSE\n */\n\n/**\n * @typedef Defaults\n * @property {number} EXPIRE\n * @property {string} TYPE\n * @property {string} POSITION\n * @property {boolean} CLOSEABLE\n * @property {boolean} GROUPED\n */\n"],
  "mappings": "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",
  "names": ["XZNotify", "content", "attrs", "trusted", "elem", "k", "v", "#styleElem", "#forcedClose", "#setPosition", "i", "#findIndex", "x", "y", "#calcBasePosition", "dx", "dy", "#calcOffsetPosition", "c", "rect", "styles", "mt", "mr", "mb", "ml", "#setPositionAll", "coll", "#reflectToProperties", "#render", "#hydrate", "#buildHeading", "h", "hasAnimation", "start", "tick", "ts", "#close", "e"]
}
