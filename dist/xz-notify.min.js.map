{
  "version": 3,
  "sources": ["xz-notify.js"],
  "sourcesContent": ["/**\n * XZNotify is a framework agnostic web component to show floating\n * notifications. Check details on https://www.github.com/dknight/xz-notify\n *\n * @author Dmitri Smirnov <https://www.whoop.ee/>\n * @license MIT 2023\n *\n * @property {string} [type=\"info\"] Type of the notification, like info,\n * error, warning, success. See `XZNotify.types` for possible values.\n * @property {number} [expire=10000] How long notification will be displayed.\n * @property {boolean} [closeable=false] If is set on the click on the\n * notification will close the notification.\n * @property {string} [position=\"ne\"] Position of the notification. See\n * `XZNotify.position` for possible values.\n * @property {string} [heading] Heading of the notification. Creates h3 element\n * inside the notification.\n *\n * @fires XZNotify#open\n * @fires XZNotify#close\n *\n * @example\n * <xz-notify expire=\"8000\" closeable>Message here</xz-notify>\n */\nclass XZNotify extends HTMLElement {\n  /**\n   * XZNotify HTML tag name.\n   * @type {string}\n   */\n  static TAG_NAME = 'xz-notify';\n\n  /**\n   * Observed attributes if required. usually notification's life is very short\n   * and no point to observe attributes.\n   * @type {Array<string>}\n   */\n  static observedAttributes = [];\n\n  /**\n   * Notification's possible types.\n   * @type {{\n   *  DEFAULT: string,\n   *  INFO: string,\n   *  WARNING: string,\n   *  SUCCESS: string,\n   *  ERROR: string\n   * }}\n   */\n  static types = {\n    INFO:    'info',\n    WARNING: 'warning',\n    SUCCESS: 'success',\n    ERROR:   'error',\n  };\n\n  /**\n   * Events for the component.\n   * @type {{OPEN: CustomEvent, CLOSE: CustomEvent}}\n   */\n  static events = {\n    OPEN:  new CustomEvent('xz-notify:open', {bubbles: true}),\n    CLOSE: new CustomEvent('xz-notify:close', {bubbles: true}),\n  };\n\n  /**\n   * Positioning constants.\n   * @enum {Object<string, string>}\n   */\n  static position = {\n    N:  'n',\n    NE: 'ne',\n    E:  'e',\n    SE: 'se',\n    S:  's',\n    SW: 'sw',\n    W:  'w',\n    NW: 'nw',\n  };\n\n  /**\n   * Contains currently opened notifications.\n   * @type {Object<string, Array<XZNotify>>}\n   */\n  static collection = {\n    [this.position.N]:  [],\n    [this.position.NE]: [],\n    [this.position.E]:  [],\n    [this.position.SE]: [],\n    [this.position.S]:  [],\n    [this.position.SW]: [],\n    [this.position.W]:  [],\n    [this.position.NW]: [],\n  };\n\n  /**\n   * Defaults for the component.\n   * @type {{\n   *   EXPIRE: number,\n   *   TYPE: string,\n   *   POSITION: string,\n   *   CLOSEABLE: boolean\n   * }}\n   */\n  static defaults = {\n    EXPIRE:    10000,\n    TYPE:      this.types.INFO,\n    POSITION:  this.position.NE,\n    CLOSEABLE: false,\n  };\n\n  /**\n   * Creates a new XZNotify element. Recommended to use when creating\n   * notifications.\n   * @param {string} content\n   * @param {Object<string, string>} attrs\n   * @param {boolean} trusted\n   * @return {XZNotify}\n   */\n  static create = (content, attrs = {}, trusted = false) => {\n    const elem = document.createElement(this.TAG_NAME);\n    Object.entries(attrs).forEach(([k, v]) => elem.setAttribute(k, v));\n\n    if (!trusted) {\n      elem.innerText = content;\n    } else {\n      elem.innerHTML = content;\n    }\n    return elem;\n  };\n\n  // Private vars here please...\n  #styleElem = document.createElement('style');\n  #forcedClose = false;\n  // injected in build stage;\n  #css = `:host{--xz-notify-background-color: #f7f7f7;--xz-notify-heading-color: currentColor;display:block;position:fixed;left:var(--xz-notify-left);top:var(--xz-notify-top);border-radius:0;border-width:0;border-style:solid;font-family:system-ui,-apple-system,Arial,sans-serif;font-size:16px;font-weight:400;line-height:normal;margin:.5em;padding:1.5em;width:fit-content;max-width:28em;min-width:18em;height:auto;z-index:auto;animation:xz-notify-close .4s ease-in 1;animation-play-state:paused;background:var(--xz-notify-background-color) linear-gradient(to right,var(--xz-notify-heading-color) .25em,transparent 0);border-color:transparent;color:#666}@keyframes xz-notify-close{to{opacity:0}}:host([closeable]){cursor:pointer}:host([closeable]:hover):after{content:\"\";display:block;width:100%;height:100%;background:rgba(0,0,0,.05);position:absolute;top:0;left:0;pointer-events:none}:host p{margin-top:0}:host a{color:currentColor}:host h3{color:var(--xz-notify-heading-color, currentColor);font-size:125%;margin:0 0 .5em}:host([type=\"info\"]){--xz-notify-heading-color: #4d4dff;--xz-notify-background-color: #f6f6ff}:host([type=\"success\"]){--xz-notify-heading-color: #2ec946;--xz-notify-background-color: #f4fcf6}:host([type=\"warning\"]){--xz-notify-heading-color: #ffba00;--xz-notify-background-color: #fffbf2}:host([type=\"error\"]){--xz-notify-heading-color: #ff3838;--xz-notify-background-color: #fff5f5}`;\n\n  /**\n   * Constructor is always called before instance of notification is connected\n   * to DOM.\n   * @constructor\n   */\n  constructor() {\n    super();\n    this.root = this.attachShadow({mode: 'open'});\n    this.css = this.#css;\n  }\n\n  /**\n   * @type {string}\n   */\n  get css() {\n    return this.#css;\n  }\n\n  /**\n   * @param {string} v\n   */\n  set css(v) {\n    this.#css = v;\n    this.#styleElem.textContent = this.#css;\n  }\n\n  /**\n   * Calculates and sets the position of the notification.\n   */\n  #setPosition() {\n    const i = this.constructor.collection[this.position]\n        .findIndex((x) => x === this);\n    const rect = this.getBoundingClientRect();\n    const styles = getComputedStyle(this);\n    const mt = parseInt(styles.getPropertyValue('margin-top'));\n    const mr = parseInt(styles.getPropertyValue('margin-right'));\n    const mb = parseInt(styles.getPropertyValue('margin-bottom'));\n    const ml = parseInt(styles.getPropertyValue('margin-left'));\n    let x, y, dx, dy;\n    switch (this.position) {\n      case XZNotify.position.N:\n        [x, y] = ['50%', '0%'];\n        [dx, dy] = [rect.width/2, i*(rect.height + mt)];\n        break;\n      case XZNotify.position.NE:\n        [x, y] = ['100%', '0%'];\n        [dx, dy] = [rect.width + ml + mr, i*(rect.height + mt)];\n        break;\n      case XZNotify.position.E:\n        [x, y] = ['100%', '50%'];\n        [dx, dy] = [(i+1)*(rect.width + ml + mr), -(rect.height/2 + mt + mb)];\n        break;\n      case XZNotify.position.SE:\n        [x, y] = ['100%', '100%'];\n        [dx, dy] = [rect.width + ml + mr, -(i+1)*(rect.height + mt + mb)];\n        break;\n      case XZNotify.position.S:\n        [x, y] = ['50%', '100%'];\n        [dx, dy] = [rect.width/2, -(i+1)*(rect.height + mt + mb)];\n        break;\n      case XZNotify.position.SW:\n        [x, y] = ['0%', '100%'];\n        [dx, dy] = [0, -(i+1)*(rect.height + mt + mb)];\n        break;\n      case XZNotify.position.W:\n        [x, y] = ['0%', '50%'];\n        [dx, dy] = [i*-(rect.width + ml), -(rect.height/2 + mt + mb)];\n        break;\n      case XZNotify.position.NW:\n        [x, y] = ['0%', '0%'];\n        [dx, dy] = [0, i*(rect.height + mt)];\n        break;\n    };\n    this.style.setProperty('--xz-notify-left', `calc(${x} - ${dx}px)`);\n    this.style.setProperty('--xz-notify-top', `calc(${y} + ${dy}px)`);\n  }\n\n  /**\n   * Re-position all elements.\n   */\n  #setPositionAll() {\n    Object.values(this.constructor.collection).forEach((coll) => {\n      coll.forEach((x) => this.#setPosition.call(x));\n    });\n  }\n\n  /**\n   * @inheritdoc\n   */\n  connectedCallback() {\n    this.#reflectToProperties();\n    this.constructor.collection[this.position].push(this);\n    this.dispatchEvent(this.constructor.events.OPEN, this);\n    this.#render();\n    this.#hydrate();\n  }\n\n  /**\n   * Reflect attributes to properties for convineicen.\n   * Use default if no attribute set.\n   */\n  #reflectToProperties() {\n    this.type = (this.getAttribute('type')\n        || this.constructor.defaults.TYPE).toLowerCase();\n    this.position = (this.getAttribute('position')\n        || this.constructor.position.NE).toLowerCase();\n    this.expire = Number(this.getAttribute('expire'))\n        || this.constructor.defaults.EXPIRE;\n    this.closeable = this.hasAttribute('closeable');\n    this.heading = this.getAttribute('heading');\n  }\n\n  /**\n   * Renders element.\n   * @private\n   */\n  #render() {\n    this.root.append(this.#styleElem);\n    this.heading && this.root.appendChild(this.#buildHeading());\n    // TODO try to think out better solution, maybe slots?\n    this.root.append(...this.children);\n  }\n\n  /**\n   * Builds heading <h3> element.\n   * @return {HTMLHeadingElement}\n   */\n  #buildHeading() {\n    const h = document.createElement('h3');\n    h.innerText = this.heading;\n    return h;\n  }\n\n  /**\n   * Added all interactivity here for potential SSR.\n   * But actually can be done in render() or connectedCallback().\n   * @private\n   */\n  #hydrate() {\n    const hasAnimation = parseFloat(\n        window.getComputedStyle(this).getPropertyValue('animation-duration'),\n    ) > 0;\n    this.#setPosition();\n    let start;\n    const tick = (ts) => {\n      if (start === undefined) {\n        start = ts;\n      }\n      if (ts - start >= this.expire || this.#forcedClose) {\n        this.dataset.closing = '';\n        if (hasAnimation > 0) {\n          this.style.animationPlayState = 'running';\n        } else {\n          this.#close();\n        }\n        return;\n      }\n      requestAnimationFrame(tick);\n    };\n    requestAnimationFrame(tick);\n    this.addEventListener('animationend', this.#close);\n    if (this.closeable) {\n      this.addEventListener('click', this.closeHandler.bind(this));\n    }\n  }\n\n  /**\n   * Closes the notification.\n   */\n  #close() {\n    this.dispatchEvent(this.constructor.events.CLOSE, this);\n    this.remove();\n  }\n\n  /**\n   * Handler when closeable is true and clicked on the notification.\n   * @param {MouseEvent|PointerEvent} e\n   */\n  closeHandler(e) {\n    this.#forcedClose = true;\n  }\n\n  /**\n   * @inheritdoc\n   */\n  disconnectedCallback() {\n    this.constructor.collection[this.position]\n        = this.constructor.collection[this.position].filter((x) => x !== this);\n    this.#setPositionAll();\n  }\n}\n\nwindow.customElements.define(XZNotify.TAG_NAME, XZNotify);\n\nexport default XZNotify;\n"],
  "mappings": "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",
  "names": ["XZNotify", "content", "attrs", "trusted", "elem", "k", "v", "#styleElem", "#forcedClose", "#css", "#setPosition", "i", "x", "rect", "styles", "mt", "mr", "mb", "ml", "y", "dx", "dy", "#setPositionAll", "coll", "#reflectToProperties", "#render", "#hydrate", "#buildHeading", "h", "hasAnimation", "start", "tick", "ts", "#close", "e"]
}
