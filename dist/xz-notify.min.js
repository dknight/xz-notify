// xz-notify.min.js, https://github.com/dknight/xz-notify
export default class i extends HTMLElement{static TAG_NAME="xz-notify";static observedAttributes=[];static types={DEFAULT:"default",INFO:"info",WARNING:"warning",SUCCESS:"success",ERROR:"error"};static events={OPEN:new CustomEvent("xz-notify:open",{bubbles:!0}),CLOSE:new CustomEvent("xz-notify:close",{bubbles:!0})};static position={N:"n",NE:"ne",E:"e",SE:"se",S:"s",SW:"sw",W:"w",NW:"nw"};static collection={[this.position.N]:[],[this.position.NE]:[],[this.position.E]:[],[this.position.SE]:[],[this.position.S]:[],[this.position.SW]:[],[this.position.W]:[],[this.position.NW]:[]};static defaults={EXPIRE:5e3,TYPE:this.types.DEFAULT,POSITION:this.position.NE,CLOSEABLE:!1};static create=(t,e={},s=!1)=>{const o=document.createElement(this.TAG_NAME);return Object.entries(e).forEach(([l,h])=>o.setAttribute(l,h)),s?o.innerHTML=t:o.innerText=t,o};#e=document.createElement("style");#o=!1;#t=`
    :host {
      display:        var(--xz-notify-display, block);
      border-radius:  var(--xz-notify-border-radius, .375em);
      border-width:   var(--xz-notify-border-width, .0625em);
      border-style:   var(--xz-notify-border-style, solid);
      font-family:    var(--xz-notify-font-family,        system-ui, -apple-system, Arial, sans-serif);
      font-size:      var(--xz-notify-font-size, 16px);
      font-weight:    var(--xz-notify-font-weight, normal);
      line-height:    var(--xz-notify-line-height, normal);
      margin:         var(--xz-notify-margin, .5em);
      padding:        var(--xz-notify-padding, 1em);
      width:          var(--xz-notify-width, fit-content);
      max-width:      var(--xz-notify-max-width, 28em);
      min-width:      var(--xz-notify-min-width, 18em);
      height:         var(--xz-notify-height, auto);
      opacity:        var(--xz-notify-opacity, 1);
      position:       var(--zx-notify-position, fixed);
      left:           var(--xz-notify-left);
      top:            var(--xz-notify-top);
      z-index:        var(--xz-notify-z-index, auto);
      animation:      var(--xz-notify-animation, xz-close .25s ease-in 1);
      animation-play-state: paused;

      background:    var(--xz-notify-default-background, #fcfcfd);
      border-color:  var(--xz-notify-default-border-color, #e9ecef);
      color:         var(--xz-notify-default-color, #495057);
    }

    :host([type="${this.constructor.types.SUCCESS}"]) {
      background:    var(--xz-notify-default-background, #d1e7dd);
      border-color:  var(--xz-notify-default-border-color, #a3cfbb);
      color:         var(--xz-notify-default-color, #0a3922);
    }
    :host([type="${this.constructor.types.INFO}"]) {
      background:    var(--xz-notify-default-background, #cfe2ff);
      border-color:  var(--xz-notify-default-border-color, #9ec5fe);
      color:         var(--xz-notify-default-color, #052c65);
    }
    :host([type="${this.constructor.types.WARNING}"]) {
      background:    var(--xz-notify-default-background, #fff3cd);
      border-color:  var(--xz-notify-default-border-color, #ffe69c);
      color:         var(--xz-notify-default-color, #664d03);
    }
    :host([type="${this.constructor.types.ERROR}"]) {
      background:    var(--xz-notify-default-background, #f8d7da);
      border-color:  var(--xz-notify-default-border-color, #f1aeb5);
      color:         var(--xz-notify-default-color, #58151c);
    }

    :host([closeable]) {
      cursor: pointer;
    }
    :host([closeable]:hover) {
      filter: brightness(.975);
    }
    :host p {margin-top: 0}
    :host a {color: currentColor}

    @keyframes xz-close {to {opacity: 0}}
    @media (prefers-reduced-motion) {
      :host {
        animation-duration: 1ms;
      }
    }`;constructor(){super(),this.root=this.attachShadow({mode:"open"}),this.css=this.#t}get css(){return this.#t}set css(t){this.#t=t,this.#e.textContent=this.#t}#i(){const t=this.constructor.collection[this.position].findIndex(f=>f===this),e=this.getBoundingClientRect(),s=getComputedStyle(this),o=parseInt(s.getPropertyValue("margin-top")),l=parseInt(s.getPropertyValue("margin-right")),h=parseInt(s.getPropertyValue("margin-bottom")),d=parseInt(s.getPropertyValue("margin-left"));let r,n,a,c;switch(this.position){case i.position.N:[r,n]=["50%","0%"],[a,c]=[e.width/2,t*(e.height+o)];break;case i.position.NE:[r,n]=["100%","0%"],[a,c]=[e.width+d+l,t*(e.height+o)];break;case i.position.E:[r,n]=["100%","50%"],[a,c]=[(t+1)*(e.width+d+l),-(e.height/2+o+h)];break;case i.position.SE:[r,n]=["100%","100%"],[a,c]=[e.width+d+l,-(t+1)*(e.height+o+h)];break;case i.position.S:[r,n]=["50%","100%"],[a,c]=[e.width/2,-(t+1)*(e.height+o+h)];break;case i.position.SW:[r,n]=["0%","100%"],[a,c]=[0,-(t+1)*(e.height+o+h)];break;case i.position.W:[r,n]=["0%","50%"],[a,c]=[t*-(e.width+d),-(e.height/2+o+h)];break;case i.position.NW:[r,n]=["0%","0%"],[a,c]=[0,t*(e.height+o)];break}this.style.setProperty("--xz-notify-left",`calc(${r} - ${a}px)`),this.style.setProperty("--xz-notify-top",`calc(${n} + ${c}px)`)}#s(){Object.values(this.constructor.collection).forEach(t=>{t.forEach(e=>this.#i.call(e))})}connectedCallback(){this.#r(),this.constructor.collection[this.position].push(this),this.dispatchEvent(this.constructor.events.OPEN,this),this.#n(),this.#a()}#r(){this.type=(this.getAttribute("type")||this.constructor.defaults.TYPE).toLowerCase(),this.position=(this.getAttribute("position")||this.constructor.position.NE).toLowerCase(),this.expire=Number(this.getAttribute("expire"))||this.constructor.defaults.EXPIRE,this.closeable=this.hasAttribute("closeable")}#n(){this.root.append(this.#e,...this.childNodes)}#a(){this.#i();let t;const e=s=>{if(t===void 0&&(t=s),s-t>=this.expire||this.#o){this.dataset.closing="",this.style.animationPlayState="running";return}requestAnimationFrame(e)};requestAnimationFrame(e),this.addEventListener("animationend",this.remove),this.closeable&&this.addEventListener("click",this.closeHandler.bind(this))}closeHandler(t){this.#o=!0}disconnectedCallback(){this.dispatchEvent(this.constructor.events.CLOSE,this),this.constructor.collection[this.position]=this.constructor.collection[this.position].filter(t=>t!==this),this.#s()}}
//# sourceMappingURL=xz-notify.min.js.map
